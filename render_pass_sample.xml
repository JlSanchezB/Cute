<Root>
<Global>
<Resource type="bool" name="PostProcessActivated">true</Resource>
<Resource type="Texture" name="SampleTexture">texture.dds</Resource>
<Resource type="ConstantBuffer" name="GlobalConstantBuffer" size="10" access="Dynamic"/>
<Resource type="RootSignature" name="GraphicsRootSignature">
	<RootParam index="0" type="DescriptorTable">
		<Range base_shader_register="0" size="1" type="ShaderResource" visibility="Pixel"/>
    <Range base_shader_register="0" size="1" type="ConstantBuffer" visibility="All"/>
	</RootParam>
	<StaticSample shader_register="0" visibility="Pixel"/> 
	<StaticSample shader_register="1" visibility="Pixel" filter="Linear"/> 
</Resource>
</Global>
<Passes>
  <Pass name="main" type="Viewport3D">
	  <SetRenderTarget>
		  <RenderTarget>BackBuffer</RenderTarget>
	  </SetRenderTarget>
	  <ClearRenderTarget colour="0,0,0,0"/>
    <SetRootSignature>GraphicsRootSignature</SetRootSignature>
    <SetPipelineState>
      <Resource type="GraphicsPipelineState" name="pipeline test 1">
        <Shader code="
              Texture2D texture_test : t0;
              SamplerState static_sampler : s1;

              struct PSInput
              {
  	            float4 position : SV_POSITION;
  	            float2 tex : TEXCOORD0;
              };

              PSInput vs_main(float4 position : POSITION, float2 tex : TEXCOORD0)
              {
	              PSInput result;

	              result.position = position;
	              result.tex = tex;

	              return result;
              }

              float4 ps_main(PSInput input) : SV_TARGET
              {
	              return texture_test.Sample(static_sampler, input.tex);
              }" pixelshader_entry="ps_main" vertex_shader_entry="vs_main" target="5.0"/>
        <rootsignature>
          GraphicsRootSignature
        </rootsignature>
      </Resource>
    </SetPipelineState>
    <SetDescriptorTable pipe="Graphics" root_param="0">
      <Resource type="DescriptorTable">
        <Descriptor>SampleTexture</Descriptor>
        <Descriptor>PointOfViewConstantBuffer</Descriptor>
      </Resource>
    </SetDescriptorTable>
    <DrawFullScreenQuad/>
  </Pass>
</Passes>
</Root>
